#!/usr/bin/env pl9m

type native list<a> = 'java.util.List' 'java.util.ArrayList#()'

let native print = 'cc.design7.pl9m.Runtime#print(java.lang.String)'
let native println = 'cc.design7.pl9m.Runtime#println(java.lang.String)'
let native to_string = 'java.util.Objects#toString(java.lang.Object)java.lang.String'

let decl sum :: (int, int) -> int

let sum = fn (first, last)
    let i   = ref(first),
        acc = ref(0)
    in loop
        if *i > last then
            break *acc
        end

        acc := *acc + *i
        i := *i + 1
    end

let decl main :: (list<string>) -> ()

let main = fn (args) begin
    print("Sum from 1 to 10 is: ");
    println(to_string(sum(1, 10)))
end
